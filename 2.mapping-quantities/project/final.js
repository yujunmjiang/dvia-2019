var totals
var electricityShare

function preload(){
  totals = loadJSON('data/totals.json')
  electricity = loadJSON('data/electricity.json')
}

function setup(){
  createCanvas(2500, 1000)
  background(255)
  angleMode(DEGREES)

  // pick one of the three data files to work with and call it 'data'
  var data = totals

  // set up typography
  textFont("Courier New")
  textSize(16)
  fill(0)
  noStroke()

  var x = 200
  var y = 100
  var rowHeight = 50
  var colWidth = 30

  // draw country name labels on the left edge of the table
  // textStyle()
  textAlign(RIGHT)
  for (var country in data.tests){
    text(country, x-colWidth, y*2)
    y += rowHeight
  }

  // draw each year's totals, one column at a time
  textStyle(NORMAL)
  textAlign(CENTER)
  for (var i=0; i<data.years.length; i++){
    y = 100

    // draw the year label in the header row
    // var year = data.years[i]
    // fill(0)
    // text(year, x, y-rowHeight)

    // step through all the countries' totals and percentages for the year, row by row
    for (var country in data.tests){
      var value = totals.tests[country][i]

      // set color by value to draw * total of test numbers *
      var pal1 = Brewer.sequential('Reds', 9, 0, 200) 
      
      // draw red bar chart for * total of test numbers *
      // fill(pal1.colorForValue(i))
      fill (255, 0, 0, value*2)
      rect(x-15, y*2, 30, value/2)

      // * nuclear electricity production * by values and percentages
      value = electricity.tests[country][i]
      if(value > 0){
        // set color by value to draw * nuclear electricity production *
      	var pal2 = Brewer.sequential('Greens', 9, 0, 200)
        // var pal3 = Brewer.sequential('Blues', 9, 0, 200)

        // draw blue bar chart for the value of * nuclear electricity production *
        // fill(pal2.colorForValue(i))
        fill (0, 255, 0, value*2)
      	// arc(x, y, radius, radius, 0, PI)
        rect(x-15, y*2, 30, -value/2)

        // draw yellow pie chart for the percentage of * nuclear electricity production *
        fill(0, 0, 0, 25)
      	let end = map (value, 0, 100, 0, 360)
      	arc(x, y*2, 30, 30, 0, end)
        // circle(x, (y*1.5)+value, 10)
      }

      // shift downward before drawing the next country
      y += rowHeight
    }

    // shift leftward before drawing the next year
    x += colWidth
  }

  // addtional text for * LEGEND *
  fill(0, 0, 0);
  textSize(16);
  text('from', 75, 50);

  fill(255, 0, 0);
  textSize(32);
  text('Weapon', 165, 50);

  fill(0, 0, 0);
  textSize(16);
  text('to', 245, 50);

  fill(0, 255, 0);
  textSize(32);
  text('Energy', 325, 50);

  fill(0, 0, 0);
  textSize(12);
  text('The visualization represents how we change the direction to use nuclear energy after World War II (1945-2017)', 485, 80);

  // fill(255, 0, 0);
  // textSize(12);
  // text('Red', 150, 110);

  fill(255, 0, 0);
  textSize(12);
  text('Red', 140, 110);

  fill(0, 0, 0);
  textSize(12);
  text('= the total number of tests', 255, 110);

  fill(0, 255, 0);
  textSize(12);
  text('Green', 405, 110);

  fill(0, 0, 0);
  textSize(12);
  text('= the total production of electricity', 565, 110);

  fill(0, 0, 50);
  textSize(12);
  text('Grey', 750, 110);

  fill(0, 0, 0);
  textSize(12);
  text('= the percentage of electricity (generated by nuclear power)', 990, 110);

}
